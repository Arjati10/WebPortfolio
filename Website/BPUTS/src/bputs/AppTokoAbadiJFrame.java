/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bputs;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.xml.crypto.Data;
import net.proteanit.sql.DbUtils;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class AppTokoAbadiJFrame extends javax.swing.JFrame {
    cPembeli pbl[];
    cBarang brg[]; cTransaksi trns[];
    cKabel kbl[]; cLampu lmp[];
    double toBi;
    double rekap[];
    double haBar[];
    String naBar[];
    String naPem[];
    int jpbl, jbrg, jtrns;//indeks array
    int jkbl, jlmp, jBi, jBar;
    int mpbl, mbrg, mtrns;//nilai maksimal array
    int mkbl, mlmp;
    
    //constructor
    public AppTokoAbadiJFrame() {
        trns=new cTransaksi[15];
        pbl=new cPembeli[5]; brg=new cBarang[10];
        kbl=new cKabel[5]; lmp=new cLampu[5];
        rekap = new double[10];
        naBar = new String [10];
        naPem = new String [10];
        haBar = new double [10];
        jpbl=jbrg=jtrns=jBi=0;
        jkbl=jlmp=jpbl=3;
        mpbl=mkbl=mlmp=5;
        mbrg=10;mtrns=15;
        initComponents();
        dataBarang();
        dataPelanggan();
    }
    

    private void dataPelanggan(){
        pbl[0]= new cPembeli(101, "Khafillah", "Malang");
        pbl[1]= new cPembeli(102, "Akbar", "Kendal");
        pbl[2]= new cPembeli(103, "Santoso", "Sari");
        String row[][] = new String [5][3];
        for (int i = 0; i < jpbl; i++) {
            row[0][0] = String.valueOf(pbl[i].getID());
            row[0][1] = pbl[i].getNama();
            row[0][2] = pbl[i].getAlamat();
            DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
            model.addRow(row[0]);
        }
    }
    
    private void dataBarang(){
        kbl[0]=new cKabel(201, "Kabel Serabut 2.5", 4000);
        kbl[1]=new cKabel(202, "Kabel Serabut 4.0", 6000);
        kbl[2]=new cKabel(203, "Kabel Engkel", 5000);
        //siapkan array String untuk ditampilkan di tabel
        String row[][] = new String [6][3];
        for (int i = 0; i < jkbl; i++) {
            row[0][0] = String.valueOf(kbl[i].getKode());
            row[0][1] = kbl[i].getNama();
            row[0][2] = String.valueOf(kbl[i].getHarga());
            DefaultTableModel model = (DefaultTableModel)jTableBarangKabel.getModel();
            model.addRow(row[0]);
        }
        
        lmp[0]=new cLampu(206, "Lampu 3W", 13000);
        lmp[1]=new cLampu(207, "Lampu 5W", 19000);
        lmp[2]=new cLampu(208, "Lampu 9W", 25000);
        //siapkan array String untuk ditampilkan di tabel
        for (int i = 0; i < jlmp; i++) {
            row[0][0] = String.valueOf(lmp[i].getKode());
            row[0][1] = lmp[i].getNama();
            row[0][2] = String.valueOf(lmp[i].getHarga());
            DefaultTableModel model = (DefaultTableModel)jTableBarangLampu.getModel();
            model.addRow(row[0]);
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneToko = new javax.swing.JTabbedPane();
        jPanelPelanggan = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jLabelNama = new javax.swing.JLabel();
        jLabelAlamat = new javax.swing.JLabel();
        jTFIdPelanggan = new javax.swing.JTextField();
        jTFNamaPelanggan = new javax.swing.JTextField();
        jTFAlamatPelanggan = new javax.swing.JTextField();
        jButtonTambahPelanggan = new javax.swing.JButton();
        jButtonUbahPelanggan = new javax.swing.JButton();
        jButtonHapusPelanggan = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePelanggan = new javax.swing.JTable();
        jPanelBarang = new javax.swing.JPanel();
        jTFIdBarang = new javax.swing.JTextField();
        jLabelKodeBarang = new javax.swing.JLabel();
        jLabelNamaBarang = new javax.swing.JLabel();
        jTFNamaBarang = new javax.swing.JTextField();
        jTFHargaBarang = new javax.swing.JTextField();
        jLabelHargaBarang = new javax.swing.JLabel();
        jButtonTambahBarang = new javax.swing.JButton();
        jButtonUbahBarang = new javax.swing.JButton();
        jButtonHapusBarang = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableBarangKabel = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBarangLampu = new javax.swing.JTable();
        jPanelTransaksi = new javax.swing.JPanel();
        jLabelTotalTransaksi = new javax.swing.JLabel();
        jTFNoTransaksi = new javax.swing.JTextField();
        jTFIdTransaksi = new javax.swing.JTextField();
        jTFKodeTransaksi = new javax.swing.JTextField();
        jLabelKodeTransaksi = new javax.swing.JLabel();
        jLabelIdTransaksi = new javax.swing.JLabel();
        jLabelNoTransaksi = new javax.swing.JLabel();
        jButtonTambahTransaksi = new javax.swing.JButton();
        jButtonUbahTransaksi = new javax.swing.JButton();
        jButtonHapusTransaksi = new javax.swing.JButton();
        jButtonCariTransaksi = new javax.swing.JButton();
        jButtonRekapanTransaksi = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableTransaksi = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelPelanggan.setBackground(new java.awt.Color(18, 93, 114));

        jLabelID.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelID.setForeground(new java.awt.Color(239, 230, 47));
        jLabelID.setText("ID :");

        jLabelNama.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelNama.setForeground(new java.awt.Color(239, 230, 47));
        jLabelNama.setText("Nama :");

        jLabelAlamat.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelAlamat.setForeground(new java.awt.Color(239, 230, 47));
        jLabelAlamat.setText("Alamat :");

        jButtonTambahPelanggan.setText("Tambah");
        jButtonTambahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahPelangganActionPerformed(evt);
            }
        });

        jButtonUbahPelanggan.setText("Ubah");
        jButtonUbahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahPelangganActionPerformed(evt);
            }
        });

        jButtonHapusPelanggan.setText("Hapus");
        jButtonHapusPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusPelangganActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Apptokoabadi/image/icons8-customer-30.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(239, 230, 47));
        jLabel7.setText("DATA PELANGGAN");

        jTablePelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Alamat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePelangganMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePelanggan);

        javax.swing.GroupLayout jPanelPelangganLayout = new javax.swing.GroupLayout(jPanelPelanggan);
        jPanelPelanggan.setLayout(jPanelPelangganLayout);
        jPanelPelangganLayout.setHorizontalGroup(
            jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPelangganLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelAlamat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFAlamatPelanggan, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jTFNamaPelanggan, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addGroup(jPanelPelangganLayout.createSequentialGroup()
                        .addComponent(jButtonTambahPelanggan)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbahPelanggan)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonHapusPelanggan))
                    .addComponent(jTFIdPelanggan))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPelangganLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(171, 171, 171))
        );
        jPanelPelangganLayout.setVerticalGroup(
            jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPelangganLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jTFIdPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNama)
                    .addComponent(jTFNamaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlamat)
                    .addComponent(jTFAlamatPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPelangganLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahPelanggan)
                    .addComponent(jButtonUbahPelanggan)
                    .addComponent(jButtonHapusPelanggan))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPaneToko.addTab("Pelanggan", jPanelPelanggan);

        jPanelBarang.setBackground(new java.awt.Color(18, 93, 114));

        jLabelKodeBarang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelKodeBarang.setForeground(new java.awt.Color(239, 230, 47));
        jLabelKodeBarang.setText("Kode :");

        jLabelNamaBarang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelNamaBarang.setForeground(new java.awt.Color(239, 230, 47));
        jLabelNamaBarang.setText("Nama :");

        jLabelHargaBarang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelHargaBarang.setForeground(new java.awt.Color(239, 230, 47));
        jLabelHargaBarang.setText("Harga :");

        jButtonTambahBarang.setText("Tambah");
        jButtonTambahBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahBarangActionPerformed(evt);
            }
        });

        jButtonUbahBarang.setText("Ubah");
        jButtonUbahBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahBarangActionPerformed(evt);
            }
        });

        jButtonHapusBarang.setText("Hapus");
        jButtonHapusBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusBarangActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Apptokoabadi/image/icons8-light-30.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(239, 230, 47));
        jLabel8.setText("DATA BARANG");

        jTableBarangKabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Kabel", "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableBarangKabel);

        jTableBarangLampu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Lampu", "Nama", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableBarangLampu.setToolTipText("");
        jScrollPane1.setViewportView(jTableBarangLampu);

        javax.swing.GroupLayout jPanelBarangLayout = new javax.swing.GroupLayout(jPanelBarang);
        jPanelBarang.setLayout(jPanelBarangLayout);
        jPanelBarangLayout.setHorizontalGroup(
            jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarangLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(204, 204, 204))
            .addGroup(jPanelBarangLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelKodeBarang)
                    .addComponent(jLabelNamaBarang)
                    .addComponent(jLabelHargaBarang))
                .addGap(18, 18, 18)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBarangLayout.createSequentialGroup()
                        .addComponent(jButtonTambahBarang)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbahBarang)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonHapusBarang))
                    .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                        .addComponent(jTFHargaBarang, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTFNamaBarang, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTFIdBarang, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanelBarangLayout.setVerticalGroup(
            jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKodeBarang)
                    .addComponent(jTFIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNamaBarang)
                    .addComponent(jTFNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHargaBarang)
                    .addComponent(jTFHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahBarang)
                    .addComponent(jButtonUbahBarang)
                    .addComponent(jButtonHapusBarang))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneToko.addTab("Barang", jPanelBarang);

        jPanelTransaksi.setBackground(new java.awt.Color(18, 93, 114));

        jLabelTotalTransaksi.setFont(new java.awt.Font("Tw Cen MT", 1, 20)); // NOI18N
        jLabelTotalTransaksi.setForeground(new java.awt.Color(239, 230, 47));
        jLabelTotalTransaksi.setText("Total Pendapatan : Rp. ");

        jLabelKodeTransaksi.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelKodeTransaksi.setForeground(new java.awt.Color(239, 230, 47));
        jLabelKodeTransaksi.setText("Kode :");

        jLabelIdTransaksi.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelIdTransaksi.setForeground(new java.awt.Color(239, 230, 47));
        jLabelIdTransaksi.setText("ID :");

        jLabelNoTransaksi.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabelNoTransaksi.setForeground(new java.awt.Color(239, 230, 47));
        jLabelNoTransaksi.setText("No :");

        jButtonTambahTransaksi.setText("Tambah");
        jButtonTambahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahTransaksiActionPerformed(evt);
            }
        });

        jButtonUbahTransaksi.setText("Ubah");
        jButtonUbahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahTransaksiActionPerformed(evt);
            }
        });

        jButtonHapusTransaksi.setText("Hapus");
        jButtonHapusTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusTransaksiActionPerformed(evt);
            }
        });

        jButtonCariTransaksi.setText("Transaksi");
        jButtonCariTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCariTransaksiActionPerformed(evt);
            }
        });

        jButtonRekapanTransaksi.setText("Rekapan");
        jButtonRekapanTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRekapanTransaksiActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Apptokoabadi/image/icons8-cash-counter-30.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(239, 230, 47));
        jLabel9.setText("DATA TRANSAKSI");

        jTableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Transaksi", "ID Pelanggan", "Kode Barang"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableTransaksi);

        javax.swing.GroupLayout jPanelTransaksiLayout = new javax.swing.GroupLayout(jPanelTransaksi);
        jPanelTransaksi.setLayout(jPanelTransaksiLayout);
        jPanelTransaksiLayout.setHorizontalGroup(
            jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNoTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIdTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelKodeTransaksi))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                                    .addComponent(jButtonTambahTransaksi)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonUbahTransaksi)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonHapusTransaksi))
                                .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                                    .addComponent(jButtonRekapanTransaksi)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonCariTransaksi))
                                .addComponent(jTFKodeTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                                .addComponent(jTFIdTransaksi)
                                .addComponent(jTFNoTransaksi))
                            .addComponent(jLabelTotalTransaksi)))
                    .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanelTransaksiLayout.setVerticalGroup(
            jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTransaksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNoTransaksi)
                    .addComponent(jTFNoTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdTransaksi)
                    .addComponent(jTFIdTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKodeTransaksi)
                    .addComponent(jTFKodeTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahTransaksi)
                    .addComponent(jButtonUbahTransaksi)
                    .addComponent(jButtonHapusTransaksi))
                .addGap(18, 18, 18)
                .addGroup(jPanelTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRekapanTransaksi)
                    .addComponent(jButtonCariTransaksi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTotalTransaksi)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPaneToko.addTab("Transaksi", jPanelTransaksi);

        getContentPane().add(jTabbedPaneToko, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 640, 670));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Apptokoabadi/image/fix2.png"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUbahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahPelangganActionPerformed
        // TODO add your handling code here:
        //asumsinya yang berubah adalah data alamat saja
        boolean ketemu=false;
        int indeks=0;
        String id=JOptionPane.showInputDialog(this, "Masukkan ID");
        //cek cari dulu ID di array pelanggan
        for (int i = 0; i < jpbl; i++) {
            indeks=i;
            if(pbl[i].getID()==Integer.parseInt(id)){
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            String al=JOptionPane.showInputDialog(this, "Masukkan Alamat Baru");
            int j=JOptionPane.showConfirmDialog(this, "Yakin diubah?");
            if(j==0){
                pbl[indeks].setAlamat(al);
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                //update sel baris ke-indeks, kolom ke-2 
                model.setValueAt(al, indeks, 2);
                JOptionPane.showMessageDialog(this, "Berhasil diperbarui...");
            } else JOptionPane.showMessageDialog(this, "Batal Update");
        } else {
            JOptionPane.showMessageDialog(this, "ID tidak ada!");
        }
    }//GEN-LAST:event_jButtonUbahPelangganActionPerformed

    private void jButtonHapusPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusPelangganActionPerformed
        // TODO add your handling code here:
        //cari dulu ID di array object pelanggan
        boolean ketemu=false;
        int indeks=0;
        String id = JOptionPane.showInputDialog(this, "Masukkan ID");
        for (int i = 0; i < jpbl; i++) {
            if(pbl[i].getID()==Integer.parseInt(id)){
                indeks=i;   
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
            if(j==0){
                for (int i = indeks; i < jpbl; i++) {
                    if(i==jpbl-1)
                        pbl[i]=null;
                    else
                        pbl[i]=pbl[i+1];
                }
                jpbl--;
                //update isi tabel
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                model.removeRow(indeks);
                JOptionPane.showMessageDialog(this, "Berhasil dihapus...");
            }
            else JOptionPane.showMessageDialog(this, "Batal dihapus!");
        }
        else {
            JOptionPane.showMessageDialog(this, "ID tidak ada!");
        }
    }//GEN-LAST:event_jButtonHapusPelangganActionPerformed

    private void jButtonTambahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahPelangganActionPerformed
        // TODO add your handling code here:
         if(jpbl<mpbl){
            //cek kesamaan ID
            boolean ada=false;
            for (int i = 0; i < jpbl; i++) {
                if(pbl[i].getID()==Integer.parseInt(jTFIdPelanggan.getText())){
                    ada=true;
                    break;
                }
            }
            if(ada){
                JOptionPane.showMessageDialog(this, "ID sudah ada!");
            } else{
                int kd =Integer.parseInt(jTFIdPelanggan.getText());
                String nm = jTFNamaPelanggan.getText();
                String al = jTFAlamatPelanggan.getText();
                pbl[jpbl]=new cPembeli(kd, nm, al);
                //siapkan array String untuk ditampilkan di tabel
                String row[][] = new String [1][3];
                row[0][0] = String.valueOf(pbl[jpbl].getID());
                row[0][1] = pbl[jpbl].getNama();
                row[0][2] = pbl[jpbl].getAlamat();
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                model.addRow(row[0]);
                jpbl++;
                JOptionPane.showMessageDialog(this, "Penambahan sukses...");
                //kosongkan kembali textfield-nya form
                jTFIdPelanggan.setText("");
                jTFNamaPelanggan.setText("");
                jTFAlamatPelanggan.setText("");
            }
        }   else {
                JOptionPane.showMessageDialog(this, "Kapasitas penuh");
                //kosongkan kembali textfield-nya form
                jTFIdPelanggan.setText("");
                jTFNamaPelanggan.setText("");
                jTFAlamatPelanggan.setText("");
        }
    }//GEN-LAST:event_jButtonTambahPelangganActionPerformed

    private void jButtonTambahBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahBarangActionPerformed
        // TODO add your handling code here:
        if (Integer.parseInt(jTFIdBarang.getText())>=201 && Integer.parseInt(jTFIdBarang.getText())<=205) {
            if(jkbl<mkbl){
            //cek kesamaan ID
            boolean ada=false;
            for (int i = 0; i < jkbl; i++) {
                if(kbl[i].getKode()==Integer.parseInt(jTFIdBarang.getText())){
                    ada=true;
                    break;
                }
            }
            if(ada){
                JOptionPane.showMessageDialog(this, "Kode sudah ada!");
            } else{
                int kd = Integer.parseInt(jTFIdBarang.getText());
                String nm = jTFNamaBarang.getText();
                int hg = Integer.parseInt(jTFHargaBarang.getText());
                kbl[jkbl]=new cKabel(kd, nm, hg);
                //siapkan array String untuk ditampilkan di tabel
                String row[][] = new String [1][3];
                row[0][0] = String.valueOf(kbl[jkbl].getKode());
                row[0][1] = kbl[jkbl].getNama();
                row[0][2] = String.valueOf(kbl[jkbl].getHarga());
                DefaultTableModel model = (DefaultTableModel)jTableBarangKabel.getModel();
                model.addRow(row[0]);
                jkbl++;
                JOptionPane.showMessageDialog(this, "Penambahan sukses...");
                //kosongkan kembali textfield-nya form
                jTFIdBarang.setText("");
                jTFNamaBarang.setText("");
                jTFHargaBarang.setText("");
            }
        } else {
                JOptionPane.showMessageDialog(this, "Kapasitas penuh");
                //kosongkan kembali textfield-nya form
                jTFIdBarang.setText("");
                jTFNamaBarang.setText("");
                jTFHargaBarang.setText("");
        }
        } else if (Integer.parseInt(jTFIdBarang.getText())>=206 && Integer.parseInt(jTFIdBarang.getText())<=210) {
            if (jlmp<mlmp) {    
             //cek kesamaan ID          
            boolean ada=false;
            for (int i = 0; i < jlmp; i++) {
                if(lmp[i].getKode()==Integer.parseInt(jTFIdBarang.getText())){
                    ada=true;
                    break;
                }
            }
            if(ada){
                JOptionPane.showMessageDialog(this, "Kode sudah ada!");
            } else{
                int kd =Integer.parseInt(jTFIdBarang.getText());
                String nm = jTFNamaBarang.getText();
                int hg = Integer.parseInt(jTFHargaBarang.getText());
                lmp[jlmp]=new cLampu(kd, nm, hg);
                //siapkan array String untuk ditampilkan di tabel
                String row[][] = new String [10][3];
                row[0][0] = String.valueOf(lmp[jlmp].getKode());
                row[0][1] = lmp[jlmp].getNama();
                row[0][2] = String.valueOf(lmp[jlmp].getHarga());
                DefaultTableModel model = (DefaultTableModel)jTableBarangLampu.getModel();
                model.addRow(row[0]);
                jlmp++;
                JOptionPane.showMessageDialog(this, "Penambahan sukses...");
                //kosongkan kembali textfield-nya form
                jTFIdBarang.setText("");
                jTFNamaBarang.setText("");
                jTFHargaBarang.setText("");
         } 
        } else{
            JOptionPane.showMessageDialog(this, "Kode Barang Salah");
        }
      }  
    }//GEN-LAST:event_jButtonTambahBarangActionPerformed

    private void jButtonUbahBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahBarangActionPerformed
        // TODO add your handling code here:
        //asumsinya yang berubah adalah data alamat saja
        boolean ketemu=false;
        int indeks=0;
        String id=JOptionPane.showInputDialog(this, "Masukkan Kode");
        //cek cari dulu ID di array pelanggan
        if (Integer.parseInt(id)>=201 && Integer.parseInt(id)<=205) {
            for (int i = 0; i < jkbl; i++) {
            indeks=i;
            if(kbl[i].getKode()==Integer.parseInt(id)){
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            int hg = Integer.parseInt(JOptionPane.showInputDialog(this, "Masukkan harga baru"));
            int j=JOptionPane.showConfirmDialog(this, "Yakin diubah?");
            if(j==0){
                kbl[indeks].setHarga(hg);
                DefaultTableModel model = (DefaultTableModel)jTableBarangKabel.getModel();
                //update sel baris ke-indeks, kolom ke-2 
                model.setValueAt(hg, indeks, 2);
                JOptionPane.showMessageDialog(this, "Berhasil diperbarui...");
            } else JOptionPane.showMessageDialog(this, "Batal Update");
          }
        } else if (Integer.parseInt(id)>=206 && Integer.parseInt(id)<=210) {
            for (int i = 0; i < jlmp; i++) {
            indeks=i;
            if(lmp[i].getKode()==Integer.parseInt(id)){
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            int hg = Integer.parseInt(JOptionPane.showInputDialog(this, "Masukkan harga baru"));
            int j=JOptionPane.showConfirmDialog(this, "Yakin diubah?");
            if(j==0){
                lmp[indeks].setHarga(hg);
                DefaultTableModel model = (DefaultTableModel)jTableBarangLampu.getModel();
                //update sel baris ke-indeks, kolom ke-2 
                model.setValueAt(hg, indeks, 2);
                JOptionPane.showMessageDialog(this, "Berhasil diperbarui...");
            } else JOptionPane.showMessageDialog(this, "Batal Update");
          }
        } 
         else {
            JOptionPane.showMessageDialog(this, "Kode tidak ada!");
        }   
    }//GEN-LAST:event_jButtonUbahBarangActionPerformed

    private void jButtonHapusBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusBarangActionPerformed
        // TODO add your handling code here:
        //cari dulu ID di array object pelanggan
        boolean ketemu=false;
        int indeks=0;
        String id = JOptionPane.showInputDialog(this, "Masukkan Kode");
        if (Integer.parseInt(id)>=201 && Integer.parseInt(id)<=205) {
           for (int i = 0; i < jkbl; i++) {
            indeks=i;
            if(kbl[i].getKode()==Integer.parseInt(id)){
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
            if(j==0){
                for (int i = indeks; i < jkbl; i++) {
                    if(i==jkbl-1)
                        kbl[i]=null;
                    else
                        kbl[i]=kbl[i+1];
                }
                jkbl--;
                //update isi tabel
                DefaultTableModel model = (DefaultTableModel)jTableBarangKabel.getModel();
                model.removeRow(indeks);
                JOptionPane.showMessageDialog(this, "Berhasil dihapus...");
            }
            else JOptionPane.showMessageDialog(this, "Batal dihapus!");
        }
    } 
    else if (Integer.parseInt(id)>=206 && Integer.parseInt(id)<=210) {
        for (int i = 0; i < jlmp; i++) {
            indeks=i;
            if(lmp[i].getKode()==Integer.parseInt(id)){
                ketemu=true;
                break;
            }
        }
        if(ketemu==true){
            int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
            if(j==0){
                for (int i = indeks; i < jlmp; i++) {
                    if(i==jlmp-1)
                        lmp[i]=null;
                    else
                        lmp[i]=lmp[i+1];
                }
                jlmp--;
                //update isi tabel
                DefaultTableModel model = (DefaultTableModel)jTableBarangLampu.getModel();
                model.removeRow(indeks);
                JOptionPane.showMessageDialog(this, "Berhasil dihapus...");
            }
            else JOptionPane.showMessageDialog(this, "Batal dihapus!");
        }
      }
       else {
            JOptionPane.showMessageDialog(this, "Kode tidak ada!");
        }  
    }//GEN-LAST:event_jButtonHapusBarangActionPerformed

    private void jButtonTambahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahTransaksiActionPerformed
        // TODO add your handling code here:
        cPembeli p = null;
        cBarang b = null;
        if (jtrns<mtrns) {
            boolean adatrns=false;
            for (int i = 0; i < jtrns; i++) {
                if (trns[i].getKode()==Integer.parseInt(jTFNoTransaksi.getText())) {
                    adatrns=true;
                    break;
                }             
            }
            if (adatrns==true) {
                int j = JOptionPane.showConfirmDialog(this, "Nomor Sudah Ada, Lanjut?");
                if (j==0) {
                    int no = Integer.parseInt(jTFNoTransaksi.getText());
                    String id = jTFIdTransaksi.getText();
                    boolean adaId=false;
                    for (int i = 0; i < jpbl; i++) {
                        if (pbl[i].getID()==Integer.parseInt(id)) {
                            adaId=true;
                            p=pbl[i];
                            break;
                        }
                    }
                    String kd = jTFKodeTransaksi.getText();
                    //cek kode barang, apakah ada di master array
                    boolean adaKd = false;
                    if (Integer.parseInt(kd)>=201 && Integer.parseInt(kd)<=205) {
                        for (int i = 0; i < jkbl; i++) {
                            if(kbl[i].getKode()==Integer.parseInt(kd)){
                            adaKd=true;
                            b=kbl[i];
                            break;        
                            }
                        }
                    } else if (Integer.parseInt(kd)>=206 && Integer.parseInt(kd)<=210) {
                        for (int i = 0; i < jlmp; i++) {
                            if(lmp[i].getKode()==Integer.parseInt(kd)){
                            adaKd=true;
                            b=lmp[i];
                            break;        
                            }
                        }
                    }
                    if (adaId&&adaKd) {
                        trns[jtrns]=new cTransaksi(no, p, b);
                        //siapkan array String untuk ditampilkan di tabel
                        String row[][] = new String[1][3];
                        row[0][1]=String.valueOf(trns[jtrns].getPembeli().getID());
                        row[0][2]=String.valueOf(trns[jtrns].getBarang().getKode());
                        row[0][0]=String.valueOf(trns[jtrns].getKode());
                        DefaultTableModel model =(DefaultTableModel)jTableTransaksi.getModel();
                        model.addRow(row[0]);
                        jtrns++;
                        JOptionPane.showMessageDialog(this, "Penambahan sukses...");
                        //kosongkan kembali textfield form
                        jTFIdTransaksi.setText("");
                        jTFKodeTransaksi.setText("");
                        jTFNoTransaksi.setText("");
                    }
                    else{
                        if (adaId==false) {
                            JOptionPane.showMessageDialog(this, "ID tidak ada!");
                            jTFIdTransaksi.setText("");
                            jTFIdTransaksi.requestFocus();
                        } else if(adaKd==false){
                            JOptionPane.showMessageDialog(this, "Kode tidak ada!!");
                            jTFKodeTransaksi.setText("");
                            jTFKodeTransaksi.requestFocus();
                        }
                    }
                }
                else{
                    //reset form isian nomor pembelian
                    jTFNoTransaksi.setText("");
                    jTFNoTransaksi.requestFocus();
                }
            }
            else{
                int no = Integer.parseInt(jTFNoTransaksi.getText());
                String id = jTFIdTransaksi.getText();
                //cek id pelanggan 
                boolean adaId =false;
                for (int i = 0; i < jpbl; i++) {
                    if (pbl[i].getID()==Integer.parseInt(id)) {
                        adaId=true;
                        p=pbl[i];
                        break;
                    }
                }
                String kd = jTFKodeTransaksi.getText();
                //cek kode pelanggan
                boolean adaKd=false;
                if (Integer.parseInt(kd)>=201 && Integer.parseInt(kd)<=205) {
                        for (int i = 0; i < jkbl; i++) {
                            if(kbl[i].getKode()==Integer.parseInt(kd)){
                            adaKd=true;
                            b=kbl[i];
                            break;        
                            }
                        }
                    } else if (Integer.parseInt(kd)>=206 && Integer.parseInt(kd)<=210) {
                        for (int i = 0; i < jlmp; i++) {
                            if(lmp[i].getKode()==Integer.parseInt(kd)){
                            adaKd=true;
                            b=lmp[i];
                            break;        
                            }
                        }
                    }
                if (adaId&&adaKd) {
                    trns[jtrns]=new cTransaksi(no, p, b);
                    //siapkan array String untuk ditampilkan di tabel grid
                    String row[][] = new String[1][3];
                    row[0][1]=String.valueOf(trns[jtrns].getPembeli().getID());
                    row[0][2]=String.valueOf(trns[jtrns].getBarang().getKode());
                    row[0][0]=String.valueOf(trns[jtrns].getKode());
                    DefaultTableModel model=(DefaultTableModel)jTableTransaksi.getModel();
                    model.addRow(row[0]);
                    jtrns++;
                    JOptionPane.showMessageDialog(this, "Penambahan Sukses...");
                    //kosongkan tectfield form
                    jTFIdTransaksi.setText("");
                    jTFKodeTransaksi.setText("");
                    jTFNoTransaksi.setText("");
                }
                else{
                    if (adaId==false) {
                     JOptionPane.showMessageDialog(this,"ID tidak ada!");
                    jTFIdTransaksi.setText("");
                    jTFIdTransaksi.requestFocus();   
                    }
                    else if (adaKd==false){
                    JOptionPane.showMessageDialog(this, "Kode tidak ada");
                    jTFKodeTransaksi.setText("");
                    jTFKodeTransaksi.requestFocus();
                    }
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Kapasitas penuh!");
            //kosongkan textfield form
            jTFIdTransaksi.setText("");
            jTFKodeTransaksi.setText("");
            jTFNoTransaksi.setText("");
        }
    }//GEN-LAST:event_jButtonTambahTransaksiActionPerformed

    private void jButtonUbahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahTransaksiActionPerformed
        // TODO add your handling code here:
        //asumsinya yang berubah adalah data barang saja
        //dalam hal ini direpresentasikan oleh kode barang
        //sebagai "primary key"-nya class barang
        boolean ketemu=false;
        int indeks=0;
        String no = JOptionPane.showInputDialog(this, "Masukkan Nomor");
        //cek cari nomor di array pembelian
        for (int i = 0; i < jtrns; i++) {
            if (trns[i].getKode()==Integer.parseInt(no)) {
                ketemu=true;
                indeks=i;
                break;
            }
        }
        if (ketemu==true) {
            cBarang b=null;
            String kd=JOptionPane.showInputDialog(this, "Masukkan kode barang baru");
            //cari object di master array barang untuk kode baru
            boolean adabrg=false;
            if (Integer.parseInt(kd)>=201 && Integer.parseInt(kd)<=205) {
                for (int i = 0; i < jkbl; i++) {
                    if(kbl[i].getKode()==Integer.parseInt(kd)){
                        adabrg=true;
                        b=kbl[i];
                        break;
                    }
                }
            } else if (Integer.parseInt(kd)>=206 && Integer.parseInt(kd)<=210) {
                for (int i = 0; i < jlmp; i++) {
                    if(lmp[i].getKode()==Integer.parseInt(kd)){
                        adabrg=true;
                        b=lmp[i];
                        break;
                    }
                }
            }
            if (adabrg==true) {
                int j = JOptionPane.showConfirmDialog(this, "Yakin diubah");
                if (j==0) {
                    trns[indeks].setBarang(b);
                    DefaultTableModel model = (DefaultTableModel)jTableTransaksi.getModel();
                    //update data sel di baris indeks, kolom 2 
                    model.setValueAt(trns[indeks].getBarang().getKode(), indeks, 2);
                    JOptionPane.showMessageDialog(this, "Berhasil diperbarui");
                }
                else JOptionPane.showMessageDialog(this, "Batal Update!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Kode tidak ada!");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Nomor tidak ada!");
        }
    }//GEN-LAST:event_jButtonUbahTransaksiActionPerformed

    private void jButtonHapusTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusTransaksiActionPerformed
        // TODO add your handling code here:
         //cari dulu nomor object pembelian di ao (array object)
        boolean ketemu=false;
        int indeks=0;
        
        String no=JOptionPane.showInputDialog(this, "Mauskkan Nomor");
        for (int i = 0; i < jtrns; i++) {
            if (Integer.parseInt(no)==trns[i].getKode()) {
                indeks=i;
                ketemu=true;
                break;
            }
        }
        if (ketemu==true) {
            int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
            if (j==0) {
                for (int i= indeks; i < jtrns; i++) {
                    if(i==jtrns-1)
                        trns[i]=null;
                    else
                        trns[i]=trns[i+1];
                }
                jtrns--;
                //update isi tabel
                DefaultTableModel model= (DefaultTableModel)jTableTransaksi.getModel();
                model.removeRow(indeks);
                JOptionPane.showMessageDialog(this, "Berhasil dihapus!");
            }
            else
                JOptionPane.showMessageDialog(this, "Batal dihapus");
        }
        else{
            JOptionPane.showMessageDialog(this, "Nomor tidak ada!");
        }
    }//GEN-LAST:event_jButtonHapusTransaksiActionPerformed

    private void jButtonCariTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCariTransaksiActionPerformed
        // TODO add your handling code here:
        if (jtrns>0) {
           //cari nomor pembelian di ao
            boolean ketemu=false;
            String t="";
            String nb="";
            String np="";
            double h=0;
            double ht=0;
            int indeks=0;
            String no = JOptionPane.showInputDialog(this, "Masukkan Nomor!");
            String id = JOptionPane.showInputDialog(this, "Masukkan id");
            for (int i = 0; i < jtrns; i++) {
                if (trns[i].getKode()==Integer.parseInt(no)) {
                    indeks=i;
                    ketemu=true;
                    t=t+trns[i].getPembeli().getNama()+"-";
                    t=t+trns[i].getBarang().getNama()+"-";
                    t=t+trns[i].getBarang().getHarga()+"\n";
                    h=h+trns[i].getBarang().getHarga();
                    np=trns[i].getPembeli().getNama()+"-";
                    nb=trns[i].getBarang().getNama()+"-";
                }
            }
            if (ketemu==true) {
                int j = JOptionPane.showConfirmDialog(this, "Apakah pesanan sudah selesai?");
                if (j==0) {
                    if (Integer.parseInt(id)>=101 && Integer.parseInt(id)<=103) {
                        h=h*0.9;
                        t="Detail Transaksi "+no+"\n"+"Selamat anda mendapatkan diskon 10% \n"+t+" Rp. "+h;
                        JOptionPane.showMessageDialog(this, t);
                        String upd=JOptionPane.showInputDialog(this, "Uang yang diserahkan");
                        rekap[indeks]+=h;
                        naPem[indeks]=np;
                        naBar[indeks]=nb;
                        haBar[indeks]+=h;
                        toBi=toBi+h;
                        ht=Integer.parseInt(upd)-h;
                        if (ht==0) {
                            JOptionPane.showMessageDialog(this, "Uang anda pas");
                            jLabelTotalTransaksi.setText("Total Pendapatan : Rp. "+toBi);
                        } else if (ht>0) {
                            JOptionPane.showMessageDialog(this, "Kembalian anda Rp. "+ht);
                            jLabelTotalTransaksi.setText("Total Pendapatan : Rp. "+toBi);
                        } else{
                            JOptionPane.showMessageDialog(this, "Uang anda kurang Rp. "+ht);
                        }
                    } else{
                        t="Detail Transaksi "+no+"\n"+t+" Rp. "+h;
                        JOptionPane.showMessageDialog(this, t);
                        String up=JOptionPane.showInputDialog(this, "Uang yang diserahkan");
                        rekap[indeks]+=h;
                        naPem[indeks]=np;
                        naBar[indeks]=nb;
                        haBar[indeks]+=h;
                        toBi=toBi+h;
                        ht=Integer.parseInt(up)-h;
                        if (ht==0) {
                            JOptionPane.showMessageDialog(this, "Uang anda pas");
                            jLabelTotalTransaksi.setText("Total Pendapatan : "+toBi);
                        } else if (ht>0) {
                            JOptionPane.showMessageDialog(this, "Kembalian anda Rp. "+ht);
                            jLabelTotalTransaksi.setText("Total Pendapatan : "+toBi);
                        } else{
                            JOptionPane.showMessageDialog(this, "Uang anda kurang Rp. "+ht);
                        }
                    }
                }
            }  else{
                JOptionPane.showMessageDialog(this, "Nomor tidak ada!");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Pembelian kosong!");
        }
    }//GEN-LAST:event_jButtonCariTransaksiActionPerformed

    private void jTablePelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePelangganMouseClicked
        // TODO add your handling code here:
           int row = jTablePelanggan.getSelectedRow();
           String tabel_klik=(jTablePelanggan.getModel().getValueAt(row, 0).toString());
    }//GEN-LAST:event_jTablePelangganMouseClicked

    private void jButtonRekapanTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRekapanTransaksiActionPerformed
        // TODO add your handling code here:
         if (jtrns>0) {
             //cari nomor pembelian di ao
            String b="";
            String p="";
            for (int i = 0; i < jtrns-1; i++) {
                for (int j = i+1; j < jtrns; j++) {
                    if (haBar[i]<haBar[j]) {
                        double temp = haBar[j];
                        haBar[j]=haBar[i];
                        haBar[i]=temp;
                        //urutan barang 
                        String s = naBar[j];
                        naBar[j] = naBar[i];
                        naBar[i]= s;
                    }
                }
            }
            for (int i = 0; i < jtrns; i++) {
                if (naBar[i]!=null) {
                    b=b+(i+1)+". ";
                    b=b+naBar[i]+" : ";
                    b=b+haBar[i]+"\n";
                }
            }
            b="Rekap Pendapatan Barang \n"+b;
            JOptionPane.showMessageDialog(this, b);
            
            for (int i = 0; i < jtrns-1; i++) {
                 for (int j = i+1; j < jtrns; j++) {
                     if (rekap[i]<rekap[j]) {
                         double temp = rekap[j];
                         rekap[j]=rekap[i];
                         rekap[i]=temp;
                         //urutan  pembelian
                         String s = naPem[j];
                         naPem[j] = naPem[i];
                         naPem[i]= s;
                     }
                 }
             }
             for (int i = 0; i < jtrns; i++) {
                 if (naPem[i]!=null) {
                     p=p+(i+1)+". ";
                     p=p+naPem[i]+" : ";
                     p=p+rekap[i]+"\n";
                 }
             }
             p="Rekap Pendapatan Pembeli \n"+p;
             JOptionPane.showMessageDialog(this, p);
        }
        else{
            JOptionPane.showMessageDialog(this, "Belum ada Pembelian!");
        }
    }//GEN-LAST:event_jButtonRekapanTransaksiActionPerformed

    public static void main(String args[]) {
        try {
            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppTokoAbadiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppTokoAbadiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppTokoAbadiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppTokoAbadiJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppTokoAbadiJFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCariTransaksi;
    private javax.swing.JButton jButtonHapusBarang;
    private javax.swing.JButton jButtonHapusPelanggan;
    private javax.swing.JButton jButtonHapusTransaksi;
    private javax.swing.JButton jButtonRekapanTransaksi;
    private javax.swing.JButton jButtonTambahBarang;
    private javax.swing.JButton jButtonTambahPelanggan;
    private javax.swing.JButton jButtonTambahTransaksi;
    private javax.swing.JButton jButtonUbahBarang;
    private javax.swing.JButton jButtonUbahPelanggan;
    private javax.swing.JButton jButtonUbahTransaksi;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAlamat;
    private javax.swing.JLabel jLabelHargaBarang;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelIdTransaksi;
    private javax.swing.JLabel jLabelKodeBarang;
    private javax.swing.JLabel jLabelKodeTransaksi;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNamaBarang;
    private javax.swing.JLabel jLabelNoTransaksi;
    private javax.swing.JLabel jLabelTotalTransaksi;
    private javax.swing.JPanel jPanelBarang;
    private javax.swing.JPanel jPanelPelanggan;
    private javax.swing.JPanel jPanelTransaksi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTFAlamatPelanggan;
    private javax.swing.JTextField jTFHargaBarang;
    private javax.swing.JTextField jTFIdBarang;
    private javax.swing.JTextField jTFIdPelanggan;
    private javax.swing.JTextField jTFIdTransaksi;
    private javax.swing.JTextField jTFKodeTransaksi;
    private javax.swing.JTextField jTFNamaBarang;
    private javax.swing.JTextField jTFNamaPelanggan;
    private javax.swing.JTextField jTFNoTransaksi;
    private javax.swing.JTabbedPane jTabbedPaneToko;
    private javax.swing.JTable jTableBarangKabel;
    private javax.swing.JTable jTableBarangLampu;
    private javax.swing.JTable jTablePelanggan;
    private javax.swing.JTable jTableTransaksi;
    // End of variables declaration//GEN-END:variables
}
